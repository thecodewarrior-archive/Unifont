Old, spread across various files to denote various properties (combining, nonprinting, etc.):
```
[codepoint]:[glyph]
```

New, spread across various files, one for each unicode block (Latin, Alchemical Symbols, Greek Extended, etc.):
```
; [Block Name]
; [start]..[end]
[codepoint]:[glyph] $[flag] $[attr]=[value] $[attr]=[value1],[value2] * [Glyph name]
...
* Unassigned: [start]..[end]
* Unassigned: [codepoint]
...
* Missing Glyph: [start]..[end]
* Missing Glyph: [codepoint]
...
[anything] # Comment
```

NOTES:

When reading, anything after a `#` or `*` can be discarded, both mentally and literally.

Everything after a `*` (and before a `#` if there is one) is autogenerated. They aren't
generated every time though, as it isn't necessary most of the time. In order to update
these labels you can run `unifont updateblocks`, which will both update missing/unassigned
labels and add/update glyph names

The glyph hex can be empty, which is equivalent to a zero-width character

attributes:
- blank_width=single|double -> marks a glyph as a blank glyph of the specified width. Useful for spaces
- combining=[offset] -> marks a glyph as a combining character offset to the left by the specified (positive) value
- width_override=[width] -> manually overrides glyph width

flags:
- np -> marks a glyph as a nonprinting character
- ignore_empty -> the program will not complain about empty glyphs that have this tag
